---
kind: ConfigMap
apiVersion: v1
metadata:
  namespace: dg
  name: bzj-h5
data:
  default.conf: |+
    ## 启动多worker进程
    #worker_processes  auto;
    #events {
    #  worker_connections  1024;
    #}
    #http {
    #  include    /etc/nginx/mime.types;

    #  # 设置缓存信息
    #  #proxy_temp_path /tmp/temp_dir;
    #  #proxy_cache_path /tmp/cache levels=1:2 keys_zone=cache_one:100m inactive=1d max_size=1g;

    #  # 配置springboot服务集群
    #  #upstream seeker_server {
    #  #  server service-xxxxx-gateway-fat:7000 weight=3;
    #  #  keepalive 32;
    #  #}

    #  default_type  application/octet-stream;
    #  # 日志格式
    #  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                    '$status $body_bytes_sent "$http_referer" '
    #                    '"$http_user_agent" "$http_x_forwarded_for"'
    #                    '"$upstream_cache_status"';
    #  sendfile        on;
    #  keepalive_timeout  65;
    #  # 启用gzip压缩
    #  gzip  on;

      server {
          listen 80;
          # listen 443;
          # ssl on;
          # ssl_certificate /etc/nginx/ssl/server.crt;
          # ssl_certificate_key /etc/nginx/ssl/server.key;

          server_name  localhost;

          # 这是新版本的Nginx转发
          # return 301 https://$server_name$request_uri;

          charset utf-8;
          # 日志输出
          # access_log  /var/log/nginx/host.access.log  main;

          # nginx静态文件缓存
          #location ~* ^.+\.(gif|jpg|jpeg|png|htm|html|css|js|flv|ico|swf|cur|gz|svg|map|mp4|ogg|ogv|webm)$ {
          #    proxy_redirect off;
          #    # 关闭静态资源的访问日志
          #    access_log off;
          #    proxy_set_header Host $host;
          #    proxy_set_header X-Real-IP $remote_addr;
          #    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          #    proxy_cache cache_one;
          #    proxy_cache_key   $host$uri$is_args$args;
          #    proxy_cache_valid 200 302 1h;
          #    proxy_cache_valid 301 1d;
          #    proxy_cache_valid any 1m;
          #    expires 7d;
          #    add_header Nginx-Cache "$upstream_cache_status";
          #}
          location = /favicon.ico {
            root   /etc/nginx/html;
          }

          # vuejs静态文件配置
          location / {
            root   /etc/nginx/html;
            try_files $uri $uri/ @router;
            index  index.html index.htm;
          }
          # 对应上面的@router，主要原因是路由的路径资源并不是一个真实的路径，所以无法找到具体的文件
          # 因此需要rewrite到index.html中，然后交给路由在处理请求资源
          location @router {
            rewrite ^.*$ /index.html last;
          }

          ## 反向代理springboot接口服务
          #location /xxxxx/api/ {
          #  # 解决springboot中获取远程ip的问题
          #  proxy_set_header Host $host;
          #  proxy_set_header X-Real-IP $remote_addr;
          #  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          #  proxy_pass http://seeker_server/gateway/xxxx/api/;
          #  proxy_http_version 1.1;
          #  proxy_set_header Connection "";
          #}

          error_page  404              /404.html;

        # redirect server error pages to the static page /500.html
        #
          error_page   500 502 503 504  /500.html;
            location = /50x.html {
            root   /etc/nginx/html;
          }
     }
  nginx.conf: |+
    user  nginx;
    worker_processes  auto;

    error_log  /var/log/nginx/error.log warn;
    pid        /var/run/nginx.pid;


    events {
        worker_connections  1024;
    }


    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

            log_format main   '{"@timestamp":"$time_iso8601",'
                                                    '"@source":"$server_addr",'
                                                    '"remote_addr":"$remote_addr",'
                                                    '"request_method":"$request_method",'
                                                    '"scheme":"$scheme",'
                                                    '"domain":"$server_name",'
                                                    '"request_uri":"$request_uri",'
                                                    '"referer":"$http_referer",'
                                                    '"size":$body_bytes_sent,'
                                                    '"status": $status,'
                                                    '"request_time":$request_time,'
                                                    '"upstream_response_time":"$upstream_response_time",'
                                                    '"upstreamaddr":"$upstream_addr",'
                                                    '"upstream_status":"$upstream_status",'
                                                    '"http_user_agent":"$http_user_agent",'
                                                    '"http_x_forward_for":"$http_x_forwarded_for"'
                                                    '}';

        access_log  /var/log/nginx/access.log  main;

        sendfile        on;
        #tcp_nopush     on;

        keepalive_timeout  65;

        gzip                          on;
        gzip_http_version             1.1;
        gzip_vary                     on;
        gzip_proxied                  any;
        gzip_min_length               1k;
        gzip_comp_level               9;
        gzip_buffers                  4 16k;
        gzip_proxied                  expired no-cache no-store private auth no_last_modified no_etag;
        #gzip_types                    text/xml text/plain text/css application/javascript application/x-javascript application/rss+xml;
        gzip_types  text/xml text/plain text/css application/javascript application/x-javascript application/rss+xml application/json text/javascript application/xhtml+xml application/xml image/webp image/jpeg image/gif image/png image/apng;

           gzip_disable                  "MSIE [1-6]\.";

        include /etc/nginx/conf.d/*.conf;
    }
---
apiVersion: v1
kind: Service
metadata:
  name: bzj-h5
  namespace: dg
  labels:
    name: bzj-h5
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    nodePort: 30083
  selector:
    app: bzj-h5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bzj-h5
  namespace: dg
  labels:
    app: bzj-h5
spec:
  selector:
    matchLabels:
      app: bzj-h5
  replicas: 1
  template:
    metadata:
      labels:
        app: bzj-h5
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: bzj-h5
        image: reg.dg.local/h5/bzj-h5:0.0.1
        ports:
        - containerPort: 80
        resources:
          requests:
            cpu: 0.1
            memory: 1024Mi
          limits:
            cpu: 0.5
            memory: 2048Mi
        volumeMounts:
          - name: volume-bzj-h5-default
            mountPath: /etc/nginx/conf.d/default.conf
            subPath: default.conf
          - name: volume-bzj-h5-nginx
            mountPath: /etc/nginx/nginx.conf
            subPath: nginx.conf
      volumes:
        - name: volume-bzj-h5-default
          configMap:
            name: bzj-h5
            items:
              - key: default.conf
                path: default.conf
        - name: volume-bzj-h5-nginx
          configMap:
            name: bzj-h5
            items:
              - key: nginx.conf
                path: nginx.conf
      #affinity:
      #  podAntiAffinity:
      #    preferredDuringSchedulingIgnoredDuringExecution:
      #      - weight: 100
      #        podAffinityTerm:
      #          labelSelector:
      #            matchExpressions:
      #              - key: app
      #                operator: In
      #                values:
      #                  - pod-seeker-ui-fat
      #          topologyKey: kubernetes.io/hostname
